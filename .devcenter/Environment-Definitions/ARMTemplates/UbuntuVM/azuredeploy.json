{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "northeurope"
        },
        "networkInterfaceName1": {
            "type": "string",
            "defaultValue": "[concat('ubuntuvmnic', uniqueString(resourceGroup().id), '_z1')]"
        },
        "networkSecurityGroupName": {
            "type": "string",
            "defaultValue": "[concat('UbuntuVM-nsg-', uniqueString(resourceGroup().id))]"
        },
        "virtualNetworkName": {
            "type": "string",
            "defaultValue": "UbuntuVM-vnet"
        },
        "publicIpAddressName1": {
            "type": "string",
            "defaultValue": "[concat('UbuntuVM-ip-', uniqueString(resourceGroup().id))]"
        },
        "virtualMachineName": {
            "type": "string",
            "defaultValue": "[concat('UbuntuVM-', uniqueString(resourceGroup().id))]"
        },
        "virtualMachineName1": {
            "type": "string",
            "defaultValue": "[concat('UbuntuVM-', uniqueString(resourceGroup().id))]"
        },
        "virtualMachineComputerName1": {
            "type": "string",
            "defaultValue": "[substring(concat('UbuntuVM', uniqueString(resourceGroup().id)), 0, 15)]"
        },
        "virtualMachineRG": {
            "type": "string",
            "defaultValue": "[concat('UbuntuVM-', uniqueString(resourceGroup().id))]"
        },
        "enableAcceleratedNetworking": {
            "type": "bool",
            "defaultValue": true
        },
        "networkSecurityGroupRules": {
            "type": "array",
            "defaultValue": [
                {
                    "name": "SSH",
                    "properties": {
                        "priority": 300,
                        "protocol": "TCP",
                        "access": "Allow",
                        "direction": "Inbound",
                        "sourceAddressPrefix": "*",
                        "sourcePortRange": "*",
                        "destinationAddressPrefix": "*",
                        "destinationPortRange": "22"
                    }
                }
            ]
        },
        "subnetName": {
            "type": "string",
            "defaultValue": "default"
        },
        "addressPrefixes": {
            "type": "array",
            "defaultValue": [
                "10.2.0.0/16"
            ]
        },
        "subnets": {
            "type": "array",
            "defaultValue": [
                {
                    "name": "default",
                    "properties": {
                        "addressPrefix": "10.2.0.0/24"
                    }
                }
            ]
        },
        "publicIpAddressType": {
            "type": "string",
            "defaultValue": "Static"
        },
        "publicIpAddressSku": {
            "type": "string",
            "defaultValue": "Standard"
        },
        "pipDeleteOption": {
            "type": "string",
            "defaultValue": "Detach"
        },
        "osDiskType": {
            "type": "string",
            "defaultValue": "Premium_LRS"
        },
        "osDiskDeleteOption": {
            "type": "string",
            "defaultValue": "Delete"
        },
        "virtualMachineSize": {
            "type": "string",
            "defaultValue": "Standard_D4s_v3"
        },
        "nicDeleteOption": {
            "type": "string",
            "defaultValue": "Detach"
        },
        "hibernationEnabled": {
            "type": "bool",
            "defaultValue": false
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "vmuser"
        },
        "adminPassword": {
            "type": "securestring",
            "defaultValue": null
        },
        "enablePeriodicAssessment": {
            "type": "string",
            "defaultValue": "ImageDefault"
        },
        "securityType": {
            "type": "string",
            "defaultValue": "TrustedLaunch"
        },
        "secureBoot": {
            "type": "bool",
            "defaultValue": true
        },
        "vTPM": {
            "type": "bool",
            "defaultValue": true
        },
        "virtualMachine1Zone": {
            "type": "string",
            "defaultValue": "1"
        },
        "budgetName": {
            "type": "string",
            "defaultValue": "[concat('vm-budget-', uniqueString(resourceGroup().id))]",
            "metadata": {
                "description": "Name of the Budget. It should be unique within a resource group."
            }
            },
            "amount": {
            "type": "int",
            "defaultValue": 100,
            "metadata": {
                "description": "The total amount of cost or usage to track with the budget"
            }
            },
            "timeGrain": {
            "type": "string",
            "defaultValue": "Monthly",
            "allowedValues": [
                "Monthly",
                "Quarterly",
                "Annually"
            ],
            "metadata": {
                "description": "The time covered by a budget. Tracking of the amount will be reset based on the time grain."
            }
            },
            "startDate": {
            "type": "string",
            "defaultValue": "2025-06-01",
            "metadata": {
                "description": "The start date must be first of the month in YYYY-MM-DD format. Future start date should not be more than three months. Past start date should be selected within the timegrain preiod."
            }
            },
            "firstThreshold": {
            "type": "int",
            "defaultValue": 90,
            "metadata": {
                "description": "Threshold value associated with a notification. Notification is sent when the cost exceeded the threshold. It is always percent and has to be between 0.01 and 1000."
            }
            },
            "secondThreshold": {
            "type": "int",
            "defaultValue": 110,
            "metadata": {
                "description": "Threshold value associated with a notification. Notification is sent when the cost exceeded the threshold. It is always percent and has to be between 0.01 and 1000."
            }
            },
            "contactEmails": {
            "type": "array",
            "defaultValue": ["contact@email.kom"],
            "metadata": {
                "description": "The list of email addresses to send the budget notification to when the threshold is exceeded."
            }
            }

    },
    "variables": {
        "nsgId": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]",
        "vnetName": "[parameters('virtualNetworkName')]",
        "vnetId": "[resourceId(resourceGroup().name,'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]"
    },
    "resources": [
            {
                "type": "Microsoft.Consumption/budgets",
                "apiVersion": "2023-11-01",
                "name": "[parameters('budgetName')]",
                "properties": {
                    "timePeriod": {
                    "startDate": "[parameters('startDate')]"
                    },
                    "timeGrain": "[parameters('timeGrain')]",
                    "amount": "[parameters('amount')]",
                    "category": "Cost",
                    "notifications": {
                    "NotificationForExceededBudget1": {
                        "enabled": true,
                        "operator": "GreaterThan",
                        "threshold": "[parameters('firstThreshold')]",
                        "contactEmails": "[parameters('contactEmails')]"
                    },
                    "NotificationForExceededBudget2": {
                        "enabled": true,
                        "operator": "GreaterThan",
                        "threshold": "[parameters('secondThreshold')]",
                        "contactEmails": "[parameters('contactEmails')]"
                    }
                    }
                }
        },
        {
            "name": "[parameters('networkInterfaceName1')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2022-11-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
                "[concat('Microsoft.Network/publicIpAddresses/', parameters('publicIpAddressName1'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', parameters('publicIpAddressName1'))]",
                                "properties": {
                                    "deleteOption": "[parameters('pipDeleteOption')]"
                                }
                            }
                        }
                    }
                ],
                "enableAcceleratedNetworking": "[parameters('enableAcceleratedNetworking')]",
                "networkSecurityGroup": {
                    "id": "[variables('nsgId')]"
                }
            }
        },
        {
            "name": "[parameters('networkSecurityGroupName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-05-01",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": "[parameters('networkSecurityGroupRules')]"
            }
        },
        {
            "name": "[parameters('virtualNetworkName')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2024-01-01",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": "[parameters('addressPrefixes')]"
                },
                "subnets": "[parameters('subnets')]"
            }
        },
        {
            "name": "[parameters('publicIpAddressName1')]",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2020-08-01",
            "location": "[parameters('location')]",
            "properties": {
                "publicIpAllocationMethod": "[parameters('publicIpAddressType')]"
            },
            "sku": {
                "name": "[parameters('publicIpAddressSku')]"
            },
            "zones": [
                "[parameters('virtualMachine1Zone')]"
            ]
        },
        {
            "name": "[parameters('virtualMachineName1')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2024-03-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', parameters('networkInterfaceName1'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "[parameters('osDiskType')]"
                        },
                        "deleteOption": "[parameters('osDiskDeleteOption')]"
                    },
                    "imageReference": {
                        "publisher": "canonical",
                        "offer": "0001-com-ubuntu-minimal-jammy",
                        "sku": "minimal-22_04-lts-gen2",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaceName1'))]",
                            "properties": {
                                "deleteOption": "[parameters('nicDeleteOption')]"
                            }
                        }
                    ]
                },
                "securityProfile": {
                    "securityType": "[parameters('securityType')]",
                    "uefiSettings": {
                        "secureBootEnabled": "[parameters('secureBoot')]",
                        "vTpmEnabled": "[parameters('vTPM')]"
                    }
                },
                "additionalCapabilities": {
                    "hibernationEnabled": false
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachineComputerName1')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "linuxConfiguration": {
                        "patchSettings": {
                            "assessmentMode": "[parameters('enablePeriodicAssessment')]",
                            "patchMode": "ImageDefault"
                        }
                    }
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                }
            },
            "zones": [
                "[parameters('virtualMachine1Zone')]"
            ]
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        }
    }
}
